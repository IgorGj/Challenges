import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { Product } from "../interfaces";

const btns = ["All Products", "Women", "Man", "Belt", "Shoes", "Watch"];

interface Props {
  products: Product[];
}

const Shop: NextPage<Props> = ({ products }) => {
  const router = useRouter();
  const [gender, setGender] = useState<undefined | string>(undefined);
  const [q, setQ] = useState<undefined | string>(undefined);
  const clickHandler = (gender: string) => {
    if (gender === "Belt" || gender === "Shoes" || gender === "Watch") {
      setQ(gender.toLowerCase());
      setGender(undefined);
      const localQuery = router.query;
      delete localQuery.gender;
      router.push({
        query: localQuery,
      });
      console.log(localQuery.gender);
    } else if (gender === "All Products") {
      setQ(undefined);
      setGender(undefined);
      const localQuery = router.query;
      delete localQuery.gender;
      delete localQuery.q;
      router.push({
        query: localQuery,
      });
    } else {
      setGender(gender.toLowerCase());
      setQ(undefined);
      const localQuery = router.query;
      delete localQuery.q;
      router.push({
        query: localQuery,
      });
    }
  };

  // const deleteFilter = (btn: string) => {
  //   if (btn === "All Products") {
  //     setQ(undefined);
  //     setGender(undefined);
  //     const localQuery = router.query;
  //     delete localQuery.gender;
  //     delete localQuery.q;
  //     router.push({
  //       query: localQuery,
  //     });
  //   } else if (btn === "Belt") {
  //   }
  // };

  useEffect(() => {
    gender &&
      gender !== router.query.gender &&
      router.push({
        query: {
          ...router.query,
          gender,
        },
      });
  }, [gender, router]);
  useEffect(() => {
    q &&
      q !== router.query.q &&
      router.push({
        query: {
          ...router.query,
          q,
        },
      });
    console.log(router.query.q);
  }, [q, router]);
  useEffect(() => {
    router.query.gender && setGender(router.query.gender as string);
  }, [router]);
  useEffect(() => {
    router.query.q && setQ(router.query.q as string);
  }, [router]);

  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              {btns.map((btn, index) => (
                <button
                  key={`btn-now-${index}`}
                  className="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1"
                  data-filter="*"
                  onClick={() => {
                    clickHandler(btn);
                    // deleteFilter(btn);
                  }}
                >
                  {btn}
                </button>
              ))}
            </div>

            <div className="flex-w flex-c-m m-tb-10">
              <div className="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search show-search">
                <i className="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                Search
              </div>
            </div>

            {/* search */}
            <div className="panel-search w-full p-t-10 p-b-15">
              <div className="bor8 dis-flex p-l-15">
                <button className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                  <i className="zmdi zmdi-search"></i>
                </button>

                <input
                  className="mtext-107 cl2 size-114 plh2 p-r-15"
                  type="text"
                  name="search-product"
                  placeholder="Search"
                  value={q}
                  onChange={(e) => {
                    setQ(e.target.value.toLowerCase());
                  }}
                />
              </div>
            </div>
          </div>

          <div className="row isotope-grid">
            {products.length > 0 ? (
              products.map((product, index) => (
                <div
                  key={`theproduct-${index}`}
                  className="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item women"
                >
                  <div className="block2">
                    <div className="block2-pic hov-img0">
                      <img src={product.img} alt="IMG-PRODUCT" />

                      <Link href={`/shop/${product.id}`}>
                        <a className="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1">
                          View Details
                        </a>
                      </Link>
                    </div>

                    <div className="block2-txt flex-w flex-t p-t-14">
                      <div className="block2-txt-child1 flex-col-l ">
                        <Link href={`/shop/${product.id}`}>
                          <a className="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                            {product.title}
                          </a>
                        </Link>

                        <span className="stext-105 cl3">{product.price}</span>
                      </div>
                    </div>
                  </div>
                </div>
              ))
            ) : (
              <p>There are no products based on your filter.</p>
            )}
          </div>

          <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a
              href="#"
              className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1"
            >
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div>
        </div>
      </div>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const { gender, q } = query;

  const resProd = await fetch(
    `http://localhost:5001/products?${gender ? `gender_like=${gender}` : ""}&${
      q ? `q=${q}` : ""
    }`
  );
  const products = await resProd.json();
  return {
    props: {
      products,
    },
  };
};

export default Shop;
